# This was my final project for the online certification course from Break Into Tech.  I am querying a database with 11 tables to answer questions about employee, customer, and sales data. #

-- Show customers who are not in the US.
SELECT FirstName,
       LastName,
       Country
  FROM customers
 WHERE country <> 'USA';
 
-- Show only the Customers from Brazil --

SELECT *
  FROM customers
 WHERE country = 'Brazil';
 
/* Find the Invoices of customers who are from Brazil. 
 The resulting table should show the customer's full name, Invoice ID, Date of invoice, and billing country */

SELECT cust.FirstName,
       cust.LastName,
       inv.InvoiceId,
       inv.InvoiceDate,
       inv.BillingCountry
  FROM invoices inv
       LEFT JOIN
       customers cust ON cust.Customerid = inv.Customerid
 WHERE inv.BillingCountry = 'Brazil';
 
-- Show the employees who are Sales Agents --

SELECT FirstName,
       LastName,
       Title
  FROM employees
 WHERE title = 'Sales Support Agent';
 
-- Find a unique/distinct list of billing countries from the invoice table --

SELECT DISTINCT BillingCountry
  FROM invoices;
  
/* Provide a query that shows the invoices associated with each sales agent. 
The resulting table should include the Sales Agent's full name. */

SELECT emp.FirstName || ' ' || emp.LastName AS SalesAgent,
       inv.InvoiceId
  FROM employees emp
       JOIN
       customers cust ON cust.SupportRepId = emp.EmployeeId
       JOIN
       invoices inv ON inv.CustomerId = cust.CustomerId;
       
-- Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers. --

SELECT i.Total,
       c.FirstName || ' ' || c.LastName AS CustomerName,
       i.BillingCountry,
       e.FirstName || ' ' || e.LastName AS SalesAgent
  FROM employees e
       JOIN
       customers c ON c.SupportRepID = e.EmployeeId
       JOIN
       invoices i ON i.CustomerId = c.CustomerId;
       
-- How many invoices were there in 2009? --

SELECT COUNT(InvoiceId) 
  FROM invoices
 WHERE InvoiceDate LIKE '2009%';
 
-- What are the total sales for 2009? --

SELECT ROUND(SUM(Total), 2) TotalSales
  FROM invoices
 WHERE InvoiceDate LIKE '2009%';
 
-- Write a query that includes the purchased track name with each invoice line ID. --

SELECT i.invoiceLineId,
       t.Name TrackName
  FROM invoice_items i
       JOIN
       tracks t ON i.TrackId = t.TrackId;
       
-- Write a query that includes the purchased track name and artist name with each invoice line ID.

SELECT il.InvoiceLineId,
       t.Name AS TrackName,
       ar.Name AS ArtistName
  FROM invoice_items il
       JOIN
       tracks t ON il.TrackId = t.TrackId
       JOIN
       albums al ON t.AlbumId = al.AlbumId
       JOIN
       artists ar ON al.ArtistId = ar.ArtistId;
 
-- Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre --

SELECT t.Name AS Track_Name,
       a.Title AlbumTitle,
       m.Name MediaType,
       g.Name Genre
  FROM tracks t
       JOIN
       albums a ON t.AlbumId = a.AlbumId
       JOIN
       media_types m ON t.MediaTypeId = m.MediaTypeId
       JOIN
       genres g ON t.GenreId = g.GenreId
 ORDER BY AlbumTitle;
 
-- Show the total sales made by each sales agent. -- 

SELECT e.FirstName || ' ' || e.LastName AS SalesAgent,
       ROUND(SUM(i.Total), 2) AS Total_Sales
  FROM employees e
       JOIN
       customers c ON e.EmployeeId = c.SupportRepId
       JOIN
       invoices i ON i.CustomerId = c.CustomerId
       WHERE e.Title = 'Sales Support Agent'
 GROUP BY SalesAgent;
 
-- Which sales agent made the most dollars in sales in 2009? -- 

SELECT e.FirstName || ' ' || e.LastName AS SalesAgent,
       ROUND(SUM(i.Total), 2) AS Total_Sales
  FROM employees e
       JOIN
       customers c ON e.EmployeeId = c.SupportRepId
       JOIN
       invoices i ON i.CustomerId = c.CustomerId
       WHERE e.Title = 'Sales Support Agent'
       AND i.InvoiceDate LIKE '2009%' 
 GROUP BY SalesAgent
 ORDER BY Total_Sales desc LIMIT 1;
